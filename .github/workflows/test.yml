name: Build GKI - TEST

on:
  workflow_dispatch:
   inputs:

    KernelSU:
     description: 'KernelSU'
     required: false
     default: ''
     type: choice
     options:
     - 'None'
     - 'OG KernelSU'
     - 'KernelSU-Next'

    build_is_multi:
     description: 'Multi Build'
     required: false
     default: false
     type: boolean
     
    SUSFS4KSU:
     description: 'SUSFS4KSU (KSU needed!)'
     required: false
     default: false
     type: boolean

    Clang:
     description: 'Select Compiler'
     required: false
     default: ''
     type: choice
     options:
     - 'Default'
     - 'AOSP Clang'
     - 'Custom Clang'

jobs:
  build:
    name: Build GKI
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: |
       export MAN_DISABLE=true
       sudo apt update -y
       sudo apt install bc cpio flex bison aptitude git python-is-python3 tar perl wget curl lz4 zstd libarchive-tools -y
       sudo aptitude install libssl-dev -y

    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10

    - name: Build
      env:
        CHAT_ID: ${{ secrets.CHAT_ID }}
        TOKEN: ${{ secrets.TOKEN }}
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
        STATUS: "BETA"
      run: |
       chmod a+x *.sh

       if [[ "${{ inputs.build_is_multi }}" == "true" ]]; then
            export multi_build="yes"
       fi
       
       if [[ "${{ inputs.SUSFS4KSU }}" == "true" ]]; then
            export USE_KSU_SUSFS="yes"
       fi

       if [[ "${{ inputs.KernelSU }}" == "OG KernelSU" ]]; then
            export USE_KSU="yes"
       elif [[ "${{ inputs.KernelSU }}" == "KernelSU-Next" ]]; then
            export USE_KSU_NEXT="yes"
       fi

       if [[ "${{ inputs.Clang }}" == "AOSP Clang" ]]; then
           sed -i 's/export USE_CUSTOM_CLANG=.*/export USE_CUSTOM_CLANG=false/g' config.sh
           sed -i 's/export USE_AOSP_CLANG=.*/export USE_AOSP_CLANG=true/g' config.sh
       elif [[ "${{ inputs.Clang }}" == "Custom Clang" ]]; then
           sed -i 's/export USE_CUSTOM_CLANG=.*/export USE_CUSTOM_CLANG=true/g' config.sh
           sed -i 's/export USE_AOSP_CLANG=.*/export USE_AOSP_CLANG=false/g' config.sh
       elif [[ "${{ inputs.Clang }}" == "Default" ]]; then
            : # follow config.sh
       fi
      
       ./build.sh
